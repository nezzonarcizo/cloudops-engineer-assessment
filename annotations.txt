-*- Testing Simple-Web Application on localhost

https://hub.docker.com/r/yeasy/simple-web/

Command to run the simple-web application

# docker run --rm -it -p 80:80 yeasy/simple-web:latest

-*- Creating the bucket for the tfstate

aws s3api create-bucket --bucket deel-assessment-terraform-state --region us-east-1

-*- Creating the DynamoDB for the tfstate

aws dynamodb create-table \
  --table-name terraform-locks \
  --attribute-definitions AttributeName=LockID,AttributeType=S \
  --key-schema AttributeName=LockID,KeyType=HASH \
  --billing-mode PAY_PER_REQUEST


-*- Creating db_password on Secrets Manager

aws secretsmanager create-secret --name "db_password" --secret-string "******SUPER PASSWORD******"

aws secretsmanager create-secret --name "db_name" --secret-string "deelassessmentdb"

aws secretsmanager create-secret --name "db_username" --secret-string "nezzonarcizo"

aws secretsmanager create-secret --name "db_port" --secret-string "5432"

- To delete secrets from secrets manager

aws secretsmanager delete-secret --secret-id "db_port" --force-delete-without-recovery

-*- Adding the other DB vari√°veis to parameter store

aws ssm put-parameter \
    --name "/config/db_user" \
    --value "nezzonarcizo" \
    --type "String" \
    --overwrite

aws ssm put-parameter \
    --name "/config/db_name" \
    --value "deelassessmentdb" \
    --type "String" \
    --overwrite


-*- To build the python application image and test it locally

sudo docker build -t reversed-ip-app .

sudo docker run --name reversed-ip-app -d -p 8080:5000 reversed-ip-app


-*- Creating ECR Repository

aws ecr create-repository \
    --repository-name "deel-assessment-reversed-ip-app" \
    --region "us-east-1"


-*- Building and pushing the Python image to the repository

Obs: In case the Docker user is not the same as the one with access to the AWS account, you need to add AWS authentication to it or add the user with AWS credentials to the 
      Docker group in the S.O

# sudo usermod -aG docker nezzonarcizo

- Retrieve an authentication token and authenticate your Docker client to your registry. Use the AWS CLI:

# aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 089350267643.dkr.ecr.us-east-1.amazonaws.com

- Build your Docker image using the following command. For information on building a Docker file from scratch see the instructions here . You can skip this step if your image is already built:

# docker build -t deel-assessment-reversed-ip-app .

- After the build completes, tag your image so you can push the image to this repository:

# docker tag deel-assessment-reversed-ip-app:latest 089350267643.dkr.ecr.us-east-1.amazonaws.com/deel-assessment-reversed-ip-app:latest

- Run the following command to push this image to your newly created AWS repository:

# docker push 089350267643.dkr.ecr.us-east-1.amazonaws.com/deel-assessment-reversed-ip-app:latest


-*- To see the logs of cloud init

/var/log/cloud-init-output.log
/var/log/cloud-init.log


-*- RDS Connection test

# telnet deelassessmentdb.cdyakc064d06.us-east-1.rds.amazonaws.com 5432

# psql -h deelassessmentdb.cdyakc064d06.us-east-1.rds.amazonaws.com -U nezzonarcizo -d deelassessmentdb -p 5432

# password: *******

# SELECT * FROM ips;

